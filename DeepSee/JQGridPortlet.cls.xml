<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DeepSee.JQGridPortlet">
<Super>%DeepSee.Component.Portlet.abstractPortlet</Super>
<TimeCreated>62734,57803.667351</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// Parameter INCLUDEFILES = "style:http://jqueryui.com/themeroller/css/parseTheme.css.php?theme=redmond,style:http://www.trirand.net/themes/ui.jqgrid.css,script:http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js,script:http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.23/jquery-ui.min.js,script:http://www.trirand.net/js/trirand/i18n/grid.locale-ru.js,script:http://www.trirand.net/js/trirand/jquery.jqGrid.min.js,script:http://jqueryui.com/themeroller/themeswitchertool/";

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// order matters

]]></Content>
</UDLText>

<Parameter name="INCLUDEFILES">
<Default>redmond.css,ui.jqgrid.css,jquery.min.js,jquery-ui.min.js,grid.locale-ru.js,jquery.jqGrid.min.js,themeswitchertool.js</Default>
</Parameter>

<Property name="pager">
<Type>%Boolean</Type>
</Property>

<Property name="rownumbers">
<Type>%Boolean</Type>
</Property>

<Property name="viewrecords">
<Type>%Boolean</Type>
</Property>

<Property name="gridview">
<Type>%Boolean</Type>
</Property>

<Property name="filterToolbar">
<Type>%Boolean</Type>
</Property>

<Property name="rowLabels">
<Type>%Boolean</Type>
</Property>

<Method name="%OnGetPortletName">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit "jqGrid"
]]></Implementation>
</Method>

<Method name="%OnGetPortletIcon">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit "deepsee/table_48.gif"
]]></Implementation>
</Method>

<Method name="%OnGetPortletSettings">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pInfo:%List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill pInfo
	// $LB(name,value,type,caption,title)

	set pInfo($I(pInfo)) = $LB("pager",1,"%Boolean",$$$Text("pager","%DeepSee"),"")
	set pInfo($I(pInfo)) = $LB("rownumbers",1,"%Boolean",$$$Text("rownumbers","%DeepSee"),"")
	set pInfo($I(pInfo)) = $LB("viewrecords",1,"%Boolean",$$$Text("viewrecords","%DeepSee"),"")
	set pInfo($I(pInfo)) = $LB("gridview",1,"%Boolean",$$$Text("gridview","%DeepSee"),"")
	set pInfo($I(pInfo)) = $LB("filterToolbar",0,"%Boolean",$$$Text("filterToolbar","%DeepSee"),"")
	set pInfo($I(pInfo)) = $LB("rowLabels",1,"%Boolean",$$$Text("rowLabels","%DeepSee"),"")
		
	quit $$$OK
]]></Implementation>
</Method>

<Method name="%DrawHTML">
<Implementation><![CDATA[
	// This causes ZEN to render this component on the client.
	set ..renderFlag = ..renderFlag + 1
	
	// copy ..settings into properties
	#dim propName As %String = $order(..settings(""))
	while (propName '= "")
	{
		if ("" '= $get(..settings(propName)))
			try
			{
				set $property($this, propName) = ..settings(propName)
			}
			catch {}

		set propName = $order(..settings(propName))
	}

	&html<<table id="grid" style="width:100%; height:100%"/>>
	if ..pager &html<<div id="pager"/>>
]]></Implementation>
</Method>

<Method name="renderContents">
<Description>
Client-side method to render control.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	// not using this method due to strange "Error in adjustTableLayout: enc is null" exception thrown from %DeepSee.Component.pivotTable code (in case of pivot datasource)
]]></Implementation>
</Method>

<Method name="onloadHandler">
<Description>
This client event, if present, is fired when the page is loaded.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	this.renderGrid();
	this.acquireData();
]]></Implementation>
</Method>

<Method name="notifyViewHandler">
<Description>
Notification that the dataController associated with this dataView has raised an event.</Description>
<FormalSpec>reason,data1,data2,data3</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	switch(reason) 
	{
		case 'dataChange':
			this.acquireData();
			break;
		case 'modelChange':
			this.renderGrid();
			this.acquireData();
			break;
	}
]]></Implementation>
</Method>

<Method name="getConnectedController">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	// connect to controller
	var controller = this.getController();
	if (null == controller) 
	{
		// try to connect to dataController
		this.connectToController();
		controller = this.getController();
	}
	
	return controller;
]]></Implementation>
</Method>

<Method name="acquireData">
<Description>
Load data and populate the grid</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	// clear old data
	jQuery("#grid").jqGrid('clearGridData');
	
	// connect to controller
	var controller = this.getConnectedController();
	if (!controller) return;
	
	// are we connected to a pivot table?
	var isPivot = controller.getSelectedRange;
	if (!isPivot)
	{
		var labelDim = 2;
		var seriesSize = controller.getDimSize(1);
		var seriesCount = controller.getDimSize(2);
	}
	else
	{
		var labelDim = 1;
		var seriesSize = controller.getDimSize(2);
		var seriesCount = controller.getDimSize(1);
	}

	// populate props array
	var props = [];
	for (var p = 0; p < seriesSize; p++)
	{
		var propName = controller.getPropertyName(p);
		if (!isPivot && propName.charAt(0) == '%') continue;  // KPI special columns
		
		props[props.length] = {name:propName, index:p};
	}
	
	// add rows to grid
	var rows = new Array;
	for (var n = 0; n < seriesCount; n++)
	{
		var rowData = Object.create(null);
		
		if (this.rowLabels)
			Object.defineProperty(rowData, "__label", {value: controller.getLabel(n, labelDim)});
		
		for (var p = 0; p < props.length; p++)
			Object.defineProperty(rowData, props[p].name, 
					isPivot ? {value: controller.getData(n, props[p].index)} : {value: controller.getData(props[p].index, n)});

		rowData['idd']= n
		rows[n] = rowData
	}
	jQuery("#grid").jqGrid('addRowData', 'idd', rows);
]]></Implementation>
</Method>

<Method name="renderGrid">
<Description>
Create and configure jqGrid</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	jQuery("#grid").GridUnload(); // destroy the grid saving the table and pager
	
	// connect to controller
	var controller = this.getConnectedController();
	if (!controller) return;
	
	// are we connected to a pivot table?
	var isPivot = controller.getSelectedRange;
	
	var dim = (isPivot ? 2 : 1);
	var seriesSize = controller.getDimSize(dim);
	var colNames = [];
	var colModel = [];
	
	// add label column
	if (this.rowLabels)
	{
		colNames[0] = "";
		colModel[0] = {name:"__label", index:"__label"};
	}
	
	// add columns
	for (var p = 0; p < seriesSize; p++)
	{
		var propName = controller.getPropertyName(p);
		if (!isPivot && propName.charAt(0) == '%') continue;   // KPI special columns
		
		colNames[colNames.length] = controller.getLabel(p, dim);
		colModel[colModel.length] = {name:propName, index:propName};
	}
		
	/*
	var colNames = ['Inv No', 'Date', 'Client', 'Amount', 'Tax', 'Total', 'Notes'];
	var colModel = [ 
		{name:'id',index:'id', width:60, sorttype:"int"}
		, {name:'invdate',index:'invdate', width:90, sorttype:"date"}
		, {name:'name',index:'name', width:100}
		, {name:'amount',index:'amount', width:80, align:"right",sorttype:"float"}
		, {name:'tax',index:'tax', width:80, align:"right",sorttype:"float"}
		, {name:'total',index:'total', width:80,align:"right",sorttype:"float"}
		, {name:'note',index:'note', width:150, sortable:false} ];
	*/
	
	jQuery("#grid").jqGrid({
		datatype: 'local'
		, pager: (this.pager ? '#pager' : '')
		, rownumbers: this.rownumbers // A new column at left of the grid is added. The purpose of this column is to count the number of available rows, beginning from 1.
		, viewrecords: this.viewrecords // jqGrid displays the beginning and ending record number in the grid
		, gridview: this.gridview
		, colNames: colNames
		, colModel: colModel
	});
	
	if (this.filterToolbar)
		jQuery("#grid").jqGrid('filterToolbar', {searchOnEnter:false});
	
	//jQuery("#grid").jqGrid('navGrid', "#pager", {edit:false,add:false,del:false,view:false,search:false});
	//var code = new Function('rowid', 'iRow', 'iCol', 'e', 'alert(rowid + "/" + iRow + "/" + iCol);');
	//jQuery("#grid").jqGrid('setGridParam', {ondblClickRow: code});
		
	//this.getEnclosingDiv().onresize();
]]></Implementation>
</Method>

<Method name="adjustContentSize">
<Description>
Notification from the containing widget that the page is loaded or the widget is resized.
Subclass can implement this, if they wish.</Description>
<FormalSpec>load,width,height</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
jQuery("#grid").setGridWidth(width - 4);
jQuery("#grid").setGridHeight(height - 1 - jQuery("#gbox_grid").height() + jQuery("#gbox_grid .ui-jqgrid-bdiv").height());
]]></Implementation>
</Method>
</Class>
</Export>
