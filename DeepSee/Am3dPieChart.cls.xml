<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DeepSee.Am3dPieChart">
<Super>AbstractAmChart,%DeepSee.Component.Portlet.abstractPortlet</Super>
<TimeCreated>63026,70397.387274</TimeCreated>

<Method name="%OnGetPortletName">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    quit "AmCharts: 3dPieChart"
]]></Implementation>
</Method>

<Method name="%OnGetPortletIcon">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    quit "deepsee/ds_chart_pie3d.png"
]]></Implementation>
</Method>

<Method name="acquireData">
<Description>
This method gets data from controller and converts it to the right structure</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	// clear old data
	
	// connect to controller
	var controller = this.getConnectedController();
	if (!controller) return;
	
	// are we connected to a pivot table?
	var isPivot = controller.getSelectedRange;
	if (isPivot)
	{
		var labelDim = 2;
		var seriesSize = controller.getDimSize(1);
		var seriesCount = controller.getDimSize(2);
	}
	else
	{
		var labelDim = 1;
		var seriesSize = controller.getDimSize(2);
		var seriesCount = controller.getDimSize(1);
	}

	// populate props array 
	var props = [];
	var propName; //THIS IS NAME OF COLUMN WHICH IS GONNA BE USED
	for(var i=0;i <  seriesCount;i++)
	{
		window.cont=controller;
		propName = isPivot ? controller.getLabel(i,labelDim) :  controller.getLabel(i,labelDim);
		if (!isPivot && propName.charAt(0) == '%') continue;  // KPI special columns
		break; //Found acceptable name of column
	}
	for(var i=0;i < seriesSize;i++)
	{
		props[i] = isPivot?{name:controller.getLabel(i,1),index:i}: {name:controller.dataBag.getSeriesLabel(i), index:i}
		props[i].val=isPivot?controller.getDataByName(propName,i):controller.dataBag.getValue(propName,i);
	}
	console.log(props);
return props;
]]></Implementation>
</Method>

<Method name="renderContents">
<Description>
Client-side method to render control.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	 
	//renderListingButton(this,"amchart");
    this.renderSameParts(this);   
    var chart;
    var chartData=this.acquireData();
   
    
    
    // PIE CHART
    chart = new AmCharts.AmPieChart();
    chart.dataProvider = chartData;
    chart.titleField = "name";
    chart.valueField = "val";
    chart.outlineColor = "#FFFFFF";
    chart.outlineAlpha = 0.8;
    chart.fillAlphas = 0.5;
    chart.alphaField= "fill";
    chart.outlineThickness = 2;
    // this makes the chart 3D
    chart.depth3D = 15;
    chart.angle = 30;
	console.log(chart);
    // WRITE
    chart.write("amchart"+this.index);
    this.chart = chart;
    
     //This part is for ONclick
   var selfPivot = this.getConnectedController();
    console.log(selfPivot);
    if(selfPivot.getSelectedRange)
        chart.addListener("clickSlice", 
    	function (event) {
	    	console.log(event);	    
	    	
    	   	selfPivot.selectCellRange(event.dataItem.index+1,0,event.dataItem.index+1,0);
    	   	return false;
  });
]]></Implementation>
</Method>
</Class>
</Export>
