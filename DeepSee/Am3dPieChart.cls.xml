<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DeepSee.Am3dPieChart">
<Super>AbstractAmChart</Super>
<TimeCreated>63026,70397.387274</TimeCreated>

<Method name="%OnGetPortletName">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    quit "AmCharts: 3dPieChart"
]]></Implementation>
</Method>

<Method name="%OnGetPortletIcon">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[    quit "deepsee/table_48.gif"
]]></Implementation>
</Method>

<Method name="acquireData">
<Description>
This method gets data from controller and converts it to the right structure</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	// clear old data
	
	// connect to controller
	var controller = this.getConnectedController();
	if (!controller) return;
	
	// are we connected to a pivot table?
	var isPivot = controller.getSelectedRange;
	if (!isPivot)
	{
		var labelDim = 2;
		var seriesSize = controller.getDimSize(1);
		var seriesCount = controller.getDimSize(2);
	}
	else
	{
		var labelDim = 1;
		var seriesSize = controller.getDimSize(2);
		var seriesCount = controller.getDimSize(1);
	}

	// populate props array
	var props = [];
	for(var yearVal=0;yearVal <  seriesCount;yearVal++)
	{
		//var propName = controller.getPropertyName(yearVal);
		var propName = controller.getLabel(yearVal,labelDim);
		if (!isPivot && propName.charAt(0) == '%') continue;  // KPI special columns
		props[yearVal] = {name:propName, index:yearVal}
		props[yearVal].val=controller.getData(yearVal,0);
	}

return props;
]]></Implementation>
</Method>

<Method name="renderContents">
<Description>
Client-side method to render control.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	renderListingButton(this);
       
       
    var chart;
    var chartData=this.acquireData();
   
    
    
    // PIE CHART
    chart = new AmCharts.AmPieChart();
    chart.dataProvider = chartData;
    chart.titleField = "name";
    chart.valueField = "val";
    chart.outlineColor = "#FFFFFF";
    chart.outlineAlpha = 0.8;
    chart.fillAlphas = 0.5;
    chart.alphaField= "fill";
    chart.outlineThickness = 2;
    // this makes the chart 3D
    chart.depth3D = 15;
    chart.angle = 30;
	console.log(chart);
    // WRITE
    chart.write("amchart"+this.index);
    this.chart = chart;
    
     //This part is for ONclick
    var temppivot = this.getConnectedController(); //need this @clickGraphItem event
        chart.addListener("clickSlice", 
    	function (event) {
	    	console.log(event);	    
	    	
    	   	temppivot.selectCellRange(event.dataItem.index+1,0,event.dataItem.index+1,0);
    	   	return false;
  });
]]></Implementation>
</Method>
</Class>
</Export>
